/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro (ACGS)
// #define HRML(k1,k2,k3,k4) &ht LALT k1  &ht LCTRL k2  &ht LGUI k3  &ht LSHFT k4
// #define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RGUI k2  &ht RCTRL k3  &ht RALT k4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    macros {
        // todo
        macro_todo : macro_todo {
            label = "macro_todo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp MINUS &kp SPACE &kp LBKT &kp SPACE &kp RBKT &kp SPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lbkt {
            bindings = <&kp LBKT>;
            key-positions = <28 29>; // vb
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <30 31>; // nm
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <16 17>; // fg
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <18 19>; // hj
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <4 5>; // rt
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <6 7>; // yu
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_c_spc {
            bindings = <&kp LC(SPACE)>;
            key-positions = <25 26>; // zx
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_tab_next{
            bindings = <&kp LC(TAB)>;
            key-positions = <15 16>; // df
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_tab_prev {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <13 14>; // as
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>; // qw
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_todo {
            bindings = <&macro_todo>;
            key-positions = <17 18>; // gh
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB     |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I   |  O    |  P    | BKSP |
            // | ESC/CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K   |  L    |  ; :  |  ' " |
            // | SHFT     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  , < |  . >  |  / ?  |  \ | |
            //                        | GUI | MO1 | SPC |   | ENT | MO2  | ALT  |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                             &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LALT
            >;
        };

        FN_NAV {
            // -----------------------------------------------------------------------------------------
            // | CAPS | F1     | F2     | F3   | F4     | F5     |    | F6  | F7  | F8    | F9    | F10 | DEL |
            // | CTRL | VOL_UP | VOL_DN | MUTE | BRI_UP | BRI_DN |    | LFT | DWN | UP    | RGT   | F11 |     |
            // | SHFT | PREV   | NEXT   | PLAY | BT_PRV | BT_NXT |    | HME | END | PG_UP | PG_DN | F12 |     |
            //                          | GUI  |        | ENT    |    | SPC | MO3 | ALT |

            bindings = <
&kp CAPSLOCK  &kp F1           &kp F2        &kp F3      &kp F4                &kp F5                  &kp F6     &kp F7    &kp F8     &kp F9     &kp F10  &kp DELETE
&kp LCTRL     &kp C_VOLUME_UP  &kp C_VOL_DN  &kp K_MUTE  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC    &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT  &kp F11  &trans
&kp LSHFT     &kp C_PREV       &kp C_NEXT    &kp C_PLAY  &bt BT_PRV            &bt BT_NXT              &kp HOME   &kp END   &kp PG_UP  &kp PG_DN  &kp F12  &trans
                                             &kp LGUI    &trans                &kp RETURN              &kp SPACE  &mo 3     &kp LALT
            >;
        };

        NUM_SYM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CTRL |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
            // | SHFT |  `  |  -  |  _  |  [  |  ]  |   |  {  |  }  |  =  |  +  |  ~  |      |
            //                    | GUI | MO3 | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1     &kp N2     &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0     &kp BSPC
&kp LCTRL  &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &trans
&kp LSHFT  &kp GRAVE  &kp MINUS  &kp UNDER  &kp LBKT  &kp RBKT     &kp LBRC   &kp RBRC  &kp EQUAL  &kp PLUS  &kp TILDE  &trans
                                 &kp LGUI   &mo 3     &kp SPACE    &kp RET    &trans    &kp LALT
            >;
        };

        BT_NUM {
            // -----------------------------------------------------------------------------------------
            // |   | RESET |     |     |     |        |   |  7  |  8  |  9  |  *  |  /  |    |
            // |   | BTLDR |     |     |     | BT_CLR |   |  4  |  5  |  6  |  +  |  -  |    |
            // |   | BT0   | BT1 | BT2 | BT3 | BT4    |   |  1  |  2  |  3  |  .  |  =  |    |
            //                   | GUI |     | SPC    |   | ENT |     |  0  |

            bindings = <
&trans  &sys_reset    &trans        &trans        &trans        &trans          &kp N7  &kp N8  &kp N9  &kp ASTERISK  &kp SLASH  &trans
&trans  &bootloader   &trans        &trans        &trans        &bt BT_CLR      &kp N4  &kp N5  &kp N6  &kp PLUS      &kp MINUS  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp N1  &kp N2  &kp N3  &kp PERIOD    &kp EQUAL  &trans
                                    &trans        &trans        &trans          &trans  &trans  &kp N0
            >;
        };
    };
};
